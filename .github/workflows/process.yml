name: Restart PM2 Process

on:
  workflow_dispatch:
    inputs:
      server_name:
        description: 'Select the server to connect to'
        required: true
        type: choice
        options:
          - 'Indeed Training Droplet'
          - 'Richestsoft Droplet'
      process_name:
        description: 'Choose PM2 process to restart'
        required: true
        type: choice
        options:
          - '2'
          - '3'
          - 'Tourist-guide'
          - 'JCA_Api_Gateway'
          - 'JCA_central_service'
          - 'JCA_driver_service'

jobs:
  restart-process:
    runs-on: ubuntu-latest

    steps:
      - name: Restart on Indeed Training Droplet
        if: ${{ github.event.inputs.server_name == 'Indeed Training Droplet' }}
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PASSWORD }}
          passphrase: ${{ secrets.SERVER_SSH_PASSPHRASE }}   # <-- Add this line
          script: |
            if [ "${{ github.event.inputs.process_name }}" = "Select the process" ]; then
              echo "::error ::Invalid process name selected. Aborting."
              exit 1
            fi
            echo "Current PM2 processes:"
            pm2 list
            echo "Restarting process: ${{ github.event.inputs.process_name }}"
            pm2 restart "${{ github.event.inputs.process_name }}"
            echo "Saving PM2 state..."
            pm2 save
            echo "Updated PM2 process list:"
            pm2 list

      - name: Restart on Richestsoft Droplet
        if: ${{ github.event.inputs.server_name == 'Richestsoft Droplet' }}
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.RICHESTSOFT_SSH_HOST }}
          username: ${{ secrets.RICHESTSOFT_SSH_USER }}
          key: ${{ secrets.RICHESTSOFT_SSH_PRIVATE_KEY }}
          script: |
            if [ "${{ github.event.inputs.process_name }}" = "Select the process" ]; then
              echo "::error ::Invalid process name selected. Aborting."
              exit 1
            fi
            echo "Current PM2 processes:"
            pm2 list
            echo "Restarting process: ${{ github.event.inputs.process_name }}"
            pm2 restart "${{ github.event.inputs.process_name }}"
            echo "Saving PM2 state..."
            pm2 save
            echo "Updated PM2 process list:"
            pm2 list
